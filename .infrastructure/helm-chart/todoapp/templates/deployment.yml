apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-dep
  namespace: {{ .Values.namespace }}
spec:
  strategy:
    type: {{ .Values.strategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
  selector:
    matchLabels:
      app: todoapp
  template:
    metadata:
      labels:
        app: todoapp
    spec:
      serviceAccountName: {{ .Chart.Name }}-secrets-reader
      containers:
      - name: {{ .Chart.Name }}-deploy
        image: {{ .Values.containers.image }}:{{ .Values.containers.tag }}
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: app-secrets-volume
          mountPath: "/app/secrets"
          readOnly: true
        - name: app-config-volume
          mountPath: "/app/configs"
          readOnly: true
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{.Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
        env:
          {{- $root := . }}
          {{- range .Values.env }}
            - name: {{ .name }}
            {{- if .valueFrom.configMapKeyRef }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $root.Chart.Name }}-{{ .valueFrom.configMapKeyRef.name }}
                  key: {{ .valueFrom.configMapKeyRef.key }}
            {{- else if .valueFrom.secretKeyRef }}
              valueFrom:
                secretKeyRef:
                  name: {{ $root.Chart.Name }}-{{ .valueFrom.secretKeyRef.name}}
                  key: {{ .valueFrom.secretKeyRef.key }}
            {{- end }}
          {{- end }}
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: api/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: api/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-pvc-data
      - name: app-secrets-volume
        secret:
          secretName: {{ .Chart.Name }}-app-secret
      - name: app-config-volume
        configMap:
          name: {{ .Chart.Name }}-app-config
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: {{ .Values.affinity.weight }}
            preference:
              matchExpressions:
              - key: {{ .Values.affinity.key }}
                operator: In
                values:
                  - {{ .Values.affinity.values }}
